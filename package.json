{
  "name": "markdown-converter",
  "displayName": "Markdown Converter",
  "markdownDescription": "Provides the functionallity to convert MarkDown-files to html, pdf or png.",
  "version": "1.1.2",
  "publisher": "manuth",
  "author": {
    "name": "Manuel Thalmann",
    "email": "m@nuth.ch",
    "url": "https://nuth.ch"
  },
  "icon": "Resources/Icon.png",
  "keywords": [
    "MarkDown",
    "Convert",
    "HTML",
    "PDF",
    "PNG"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/manuth/MarkdownConverter.git"
  },
  "engines": {
    "vscode": "^1.23.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:markdownConverter.Convert"
  ],
  "main": "./out/extension",
  "contributes": {
    "commands": [
      {
        "command": "markdownConverter.Convert",
        "category": "Markdown",
        "title": "%Command.Convert%"
      }
    ],
    "markdown.markdownItPlugins": true,
    "configuration": {
      "title": "%Config%",
      "properties": {
        "markdownConverter.DestinationOrigin": {
          "title": "%Config.DestinationOrigin%",
          "markdownDescription": "%Config.DestinationOrigin.Description%",
          "default": "WorkspaceRoot",
          "enum": [
            "WorkspaceRoot",
            "DocumentFile"
          ],
          "enumDescriptions": [
            "%Config.DestinationOrigin.WorkspaceRoot%",
            "%Config.DestinationOrigin.DocumentFile%"
          ]
        },
        "markdownConverter.DestinationPath": {
          "title": "%Config.DestinationPath%",
          "markdownDescription": "%Config.DestinationPath.Description%",
          "type": "string",
          "default": "."
        },
        "markdownConverter.IgnoreLanguageMode": {
          "title": "%Config.IgnoreLanguageMode%",
          "markdownDescription": "%Config.IgnoreLanguageMode.Description%",
          "type": "boolean",
          "default": false
        },
        "markdownConverter.ConversionQuality": {
          "title": "%Config.ConversionQuality%",
          "markdownDescription": "%Config.ConversionQuality.Description%",
          "type": "integer",
          "default": 100
        },
        "markdownConverter.ConversionType": {
          "title": "%Config.ConversionType%",
          "markdownDescription": "%Config.ConversionType.Description%",
          "default": [
            "PDF"
          ],
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "BMP",
              "HTML",
              "JPEG",
              "PDF",
              "PNG",
              "PPM"
            ]
          }
        },
        "markdownConverter.Locale": {
          "title": "%Config.Locale%",
          "markdownDescription": "%Config.Locale.Description%",
          "default": null,
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "markdownConverter.DateFormat": {
          "title": "%Config.DateFormat%",
          "markdownDescription": "%Config.DateFormat.Description%",
          "default": "Default",
          "anyOf": [
            {
              "type": "string",
              "enum": [
                "Default",
                "FullDate"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "markdownConverter.Parser.SystemParserEnabled": {
          "title": "%Config.Parser.SystemParserEnabled%",
          "markdownDescription": "%Config.Parser.SystemParserEnabled.Description%",
          "type": "boolean",
          "default": true
        },
        "markdownConverter.Parser.EmojiType": {
          "title": "%Config.Parser.EmojiType%",
          "markdownDescription": "%Config.Parser.EmojiType.Description%",
          "type": "string",
          "default": "GitHub",
          "enum": [
            "None",
            "Native",
            "GitHub",
            "Twitter"
          ]
        },
        "markdownConverter.Parser.Toc.Enabled": {
          "title": "%Config.Parser.Toc.Enabled%",
          "markdownDescription": "%Config.Parser.Toc.Enabled.Description%",
          "type": "boolean",
          "default": true
        },
        "markdownConverter.Parser.Toc.Class": {
          "title": "%Config.Parser.Toc.Class%",
          "markdownDescription": "%Config.Parser.Toc.Class.Description%",
          "type": "string",
          "default": "markdown-converter-toc"
        },
        "markdownConverter.Parser.Toc.Levels": {
          "title": "%Config.Parser.Toc.Levels%",
          "markdownDescription": "%Config.Parser.Toc.Levels.Description%",
          "type": "string",
          "pattern": "^\\d+\\s*(-\\s*\\d+\\s*)?(,\\s*\\d+\\s*(-\\s*\\d+\\s*)?)*$",
          "default": "1-6"
        },
        "markdownConverter.Parser.Toc.Indicator": {
          "title": "%Config.Parser.Toc.Indicator%",
          "markdownDescription": "%Config.Parser.Toc.Indicator.Description%",
          "type": "string",
          "default": "^\\[\\[\\s*toc\\s*\\]\\]"
        },
        "markdownConverter.Parser.Toc.ListType": {
          "title": "%Config.Parser.Toc.ListType%",
          "markdownDescription": "%Config.Parser.Toc.ListType.Description%",
          "type": "string",
          "default": "Unordered",
          "enum": [
            "Ordered",
            "Unordered"
          ]
        },
        "markdownConverter.Document.Attributes": {
          "title": "%Config.Document.Attributes%",
          "markdownDescription": "%Config.Document.Attributes.Description%",
          "type": "object",
          "default": null,
          "additionalProperties": true,
          "properties": {
            "Author": {
              "title": "%Config.Document.Attributes.Author%",
              "markdownDescription": "%Config.Document.Attributes.Author.Description%",
              "type": "string"
            },
            "Company": {
              "title": "%Config.Document.Attributes.Company%",
              "markdownDescription": "%Config.Document.Attributes.Company.Description%",
              "type": "string"
            }
          }
        },
        "markdownConverter.Document.Paper.PaperFormat": {
          "title": "%Config.Document.Paper.PaperFormat%",
          "markdownDescription": "%Config.Document.Paper.PaperFormat.Description%",
          "type": "object",
          "default": {
            "Format": "A4"
          },
          "oneOf": [
            {
              "additionalProperties": false,
              "required": [
                "Format"
              ],
              "properties": {
                "Format": {
                  "title": "%Config.Document.Paper.PaperFormat.Format%",
                  "markdownDescription": "%Config.Document.Paper.PaperFormat.Format.Description%",
                  "type": "string",
                  "enum": [
                    "A3",
                    "A4",
                    "A5",
                    "Legal",
                    "Letter",
                    "Tabloid"
                  ]
                },
                "Orientation": {
                  "title": "%Config.Document.Paper.PaperFormat.Orientation%",
                  "markdownDescription": "%Config.Document.Paper.PaperFormat.Orientation.Description%",
                  "type": "string",
                  "enum": [
                    "Portrait",
                    "Landscape"
                  ]
                }
              }
            },
            {
              "additionalProperties": false,
              "required": [
                "Width",
                "Height"
              ],
              "properties": {
                "Width": {
                  "title": "%Config.Document.Paper.PaperFormat.Width%",
                  "markdownDescription": "%Config.Document.Paper.PaperFormat.Width.Description%"
                },
                "Height": {
                  "title": "%Config.Document.Paper.PaperFormat.Height%",
                  "markdownDescription": "%Config.Document.Paper.PaperFormat.Height.Description%"
                }
              }
            }
          ]
        },
        "markdownConverter.Document.Paper.Margin": {
          "title": "%Config.Document.Paper.Margin%",
          "markdownDescription": "%Config.Document.Paper.Margin.Description%",
          "type": "object",
          "additionalProperties": false,
          "required": [
            "Top",
            "Right",
            "Bottom",
            "Left"
          ],
          "properties": {
            "Top": {
              "title": "%Config.Document.Paper.Margin.Top%",
              "markdownDescription": "%Config.Document.Paper.Margin.Top.Description%",
              "type": "string",
              "default": "1cm"
            },
            "Right": {
              "title": "%Config.Document.Paper.Margin.Right%",
              "markdownDescription": "%Config.Document.Paper.Margin.Right.Description%",
              "type": "string",
              "default": "1cm"
            },
            "Bottom": {
              "title": "%Config.Document.Paper.Margin.Bottom%",
              "markdownDescription": "%Config.Document.Paper.Margin.Bottom.Description%",
              "type": "string",
              "default": "1cm"
            },
            "Left": {
              "title": "%Config.Document.Paper.Margin.Left%",
              "markdownDescription": "%Config.Document.Paper.Margin.Left.Description%",
              "type": "string",
              "default": "1cm"
            }
          }
        },
        "markdownConverter.Document.HeaderFooterEnabled": {
          "title": "%Config.Document.HeaderFooterEnabled%",
          "markdownDescription": "%Config.Document.HeaderFooterEnabled.Description%",
          "type": "boolean",
          "default": true
        },
        "markdownConverter.Document.HeaderTemplate": {
          "title": "%Config.Document.HeaderTemplate%",
          "markdownDescription": "%Config.Document.HeaderTemplate.Description%",
          "type": "string",
          "default": "<div style=\"margin-left: 1cm; margin-right: auto; text-align: left; \">{{ Author }}</div><div style=\"text-align: center; \"><span class=\"pageNumber\"></span>/<span class=\"totalPages\"></span></div><div style=\"margin-left: auto; margin-right: 1cm; text-align: right\">{{ Company }}</div>"
        },
        "markdownConverter.Document.FooterTemplate": {
          "title": "%Config.Document.FooterTemplate%",
          "markdownDescription": "%Config.Document.FooterTemplate.Description%",
          "type": "string",
          "default": "<div style=\"margin-left: 1cm; margin-right: auto; text-align: left; \"></div><div stlyle=\"text-align: center; \">{{ CreationDate }}</div><div style=\"margin-left: auto; margin-right: 1cm; text-align: right; \"></div>"
        },
        "markdownConverter.Document.Design.Template": {
          "title": "%Config.Document.Design.Template%",
          "markdownDescription": "%Config.Document.Design.Template.Description%",
          "type": "string",
          "default": null
        },
        "markdownConverter.Document.Design.HighlightStyle": {
          "title": "%Config.Document.Design.HighlightStyle%",
          "markdownDescription": "%Config.Document.Design.HighlightStyle.Description%",
          "default": "Default",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "string",
              "enum": [
                "None",
                "Default"
              ]
            }
          ]
        },
        "markdownConverter.Document.Design.StyleSheets": {
          "title": "%Config.Document.Design.StyleSheets%",
          "markdownDescription": "%Config.Document.Design.StyleSheets.Description%",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "tslint -p . -t verbose",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "npm run compile && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/clone": "^0.1.30",
    "@types/dedent": "^0.7.0",
    "@types/fs-extra": "^5.0.4",
    "@types/highlight.js": "^9.12.3",
    "@types/http-server": "^0.10.0",
    "@types/lodash": "^4.14.117",
    "@types/markdown-it": "0.0.3",
    "@types/markdown-it-anchor": "^4.0.2",
    "@types/mocha": "^2.2.48",
    "@types/mustache": "^0.8.31",
    "@types/node": "^10.12.0",
    "@types/puppeteer": "^1.9.0",
    "@types/request-promise-native": "^1.0.15",
    "@types/shelljs": "^0.7.9",
    "@types/string-template": "^1.0.2",
    "@types/tmp": "0.0.33",
    "@types/transliteration": "^1.6.0",
    "@types/yamljs": "^0.2.30",
    "tslint": "^5.11.0",
    "typescript": "^2.9.2",
    "vscode": "^1.1.21"
  },
  "dependencies": {
    "clone": "^2.1.2",
    "culture-info": "0.0.4",
    "dedent": "^0.7.0",
    "front-matter": "^2.3.0",
    "fs-extra": "^6.0.1",
    "highlight.js": "^9.13.1",
    "highlightjs": "^9.12.0",
    "http-server": "^0.11.1",
    "localizable-resources": "^1.0.6",
    "lodash": "^4.17.11",
    "markdown-it": "^8.4.2",
    "markdown-it-anchor": "^5.0.2",
    "markdown-it-checkbox": "^1.1.0",
    "markdown-it-emoji": "^1.3.0",
    "markdown-it-table-of-contents": "^0.4.3",
    "multi-integer-range": "^3.0.0",
    "mustache": "^2.3.2",
    "puppeteer": "^1.9.0",
    "rc": "^1.2.8",
    "request": "^2.88.0",
    "request-promise-native": "^1.0.5",
    "shelljs": "^0.8.2",
    "string-template": "^1.0.0",
    "tmp": "0.0.33",
    "transliteration": "^1.6.6",
    "twemoji": "^2.5.1",
    "yamljs": "^0.3.0"
  }
}
